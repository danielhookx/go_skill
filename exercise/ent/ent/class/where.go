// Code generated by ent, DO NOT EDIT.

package class

import (
	"entgo.io/ent/dialect/sql"
	"github.com/danielhookx/go_skill/exercise/ent/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldName, v))
}

// ClassName applies equality check predicate on the "class_name" field. It's identical to ClassNameEQ.
func ClassName(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldClassName, v))
}

// F1 applies equality check predicate on the "f1" field. It's identical to F1EQ.
func F1(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF1, v))
}

// F2 applies equality check predicate on the "f2" field. It's identical to F2EQ.
func F2(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF2, v))
}

// F3 applies equality check predicate on the "f3" field. It's identical to F3EQ.
func F3(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF3, v))
}

// F4 applies equality check predicate on the "f4" field. It's identical to F4EQ.
func F4(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF4, v))
}

// F5 applies equality check predicate on the "f5" field. It's identical to F5EQ.
func F5(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF5, v))
}

// F6 applies equality check predicate on the "f6" field. It's identical to F6EQ.
func F6(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF6, v))
}

// F7 applies equality check predicate on the "f7" field. It's identical to F7EQ.
func F7(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF7, v))
}

// F8 applies equality check predicate on the "f8" field. It's identical to F8EQ.
func F8(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF8, v))
}

// F9 applies equality check predicate on the "f9" field. It's identical to F9EQ.
func F9(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF9, v))
}

// F10 applies equality check predicate on the "f10" field. It's identical to F10EQ.
func F10(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF10, v))
}

// F11 applies equality check predicate on the "f11" field. It's identical to F11EQ.
func F11(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF11, v))
}

// F12 applies equality check predicate on the "f12" field. It's identical to F12EQ.
func F12(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF12, v))
}

// F13 applies equality check predicate on the "f13" field. It's identical to F13EQ.
func F13(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF13, v))
}

// F14 applies equality check predicate on the "f14" field. It's identical to F14EQ.
func F14(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF14, v))
}

// F15 applies equality check predicate on the "f15" field. It's identical to F15EQ.
func F15(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF15, v))
}

// F16 applies equality check predicate on the "f16" field. It's identical to F16EQ.
func F16(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF16, v))
}

// F17 applies equality check predicate on the "f17" field. It's identical to F17EQ.
func F17(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF17, v))
}

// F18 applies equality check predicate on the "f18" field. It's identical to F18EQ.
func F18(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF18, v))
}

// F19 applies equality check predicate on the "f19" field. It's identical to F19EQ.
func F19(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF19, v))
}

// F20 applies equality check predicate on the "f20" field. It's identical to F20EQ.
func F20(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF20, v))
}

// F21 applies equality check predicate on the "f21" field. It's identical to F21EQ.
func F21(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF21, v))
}

// F22 applies equality check predicate on the "f22" field. It's identical to F22EQ.
func F22(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF22, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldName, v))
}

// ClassNameEQ applies the EQ predicate on the "class_name" field.
func ClassNameEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldClassName, v))
}

// ClassNameNEQ applies the NEQ predicate on the "class_name" field.
func ClassNameNEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldClassName, v))
}

// ClassNameIn applies the In predicate on the "class_name" field.
func ClassNameIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldClassName, vs...))
}

// ClassNameNotIn applies the NotIn predicate on the "class_name" field.
func ClassNameNotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldClassName, vs...))
}

// ClassNameGT applies the GT predicate on the "class_name" field.
func ClassNameGT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldClassName, v))
}

// ClassNameGTE applies the GTE predicate on the "class_name" field.
func ClassNameGTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldClassName, v))
}

// ClassNameLT applies the LT predicate on the "class_name" field.
func ClassNameLT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldClassName, v))
}

// ClassNameLTE applies the LTE predicate on the "class_name" field.
func ClassNameLTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldClassName, v))
}

// ClassNameContains applies the Contains predicate on the "class_name" field.
func ClassNameContains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldClassName, v))
}

// ClassNameHasPrefix applies the HasPrefix predicate on the "class_name" field.
func ClassNameHasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldClassName, v))
}

// ClassNameHasSuffix applies the HasSuffix predicate on the "class_name" field.
func ClassNameHasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldClassName, v))
}

// ClassNameEqualFold applies the EqualFold predicate on the "class_name" field.
func ClassNameEqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldClassName, v))
}

// ClassNameContainsFold applies the ContainsFold predicate on the "class_name" field.
func ClassNameContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldClassName, v))
}

// F1EQ applies the EQ predicate on the "f1" field.
func F1EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF1, v))
}

// F1NEQ applies the NEQ predicate on the "f1" field.
func F1NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF1, v))
}

// F1In applies the In predicate on the "f1" field.
func F1In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF1, vs...))
}

// F1NotIn applies the NotIn predicate on the "f1" field.
func F1NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF1, vs...))
}

// F1GT applies the GT predicate on the "f1" field.
func F1GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF1, v))
}

// F1GTE applies the GTE predicate on the "f1" field.
func F1GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF1, v))
}

// F1LT applies the LT predicate on the "f1" field.
func F1LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF1, v))
}

// F1LTE applies the LTE predicate on the "f1" field.
func F1LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF1, v))
}

// F1Contains applies the Contains predicate on the "f1" field.
func F1Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF1, v))
}

// F1HasPrefix applies the HasPrefix predicate on the "f1" field.
func F1HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF1, v))
}

// F1HasSuffix applies the HasSuffix predicate on the "f1" field.
func F1HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF1, v))
}

// F1EqualFold applies the EqualFold predicate on the "f1" field.
func F1EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF1, v))
}

// F1ContainsFold applies the ContainsFold predicate on the "f1" field.
func F1ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF1, v))
}

// F2EQ applies the EQ predicate on the "f2" field.
func F2EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF2, v))
}

// F2NEQ applies the NEQ predicate on the "f2" field.
func F2NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF2, v))
}

// F2In applies the In predicate on the "f2" field.
func F2In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF2, vs...))
}

// F2NotIn applies the NotIn predicate on the "f2" field.
func F2NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF2, vs...))
}

// F2GT applies the GT predicate on the "f2" field.
func F2GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF2, v))
}

// F2GTE applies the GTE predicate on the "f2" field.
func F2GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF2, v))
}

// F2LT applies the LT predicate on the "f2" field.
func F2LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF2, v))
}

// F2LTE applies the LTE predicate on the "f2" field.
func F2LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF2, v))
}

// F2Contains applies the Contains predicate on the "f2" field.
func F2Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF2, v))
}

// F2HasPrefix applies the HasPrefix predicate on the "f2" field.
func F2HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF2, v))
}

// F2HasSuffix applies the HasSuffix predicate on the "f2" field.
func F2HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF2, v))
}

// F2EqualFold applies the EqualFold predicate on the "f2" field.
func F2EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF2, v))
}

// F2ContainsFold applies the ContainsFold predicate on the "f2" field.
func F2ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF2, v))
}

// F3EQ applies the EQ predicate on the "f3" field.
func F3EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF3, v))
}

// F3NEQ applies the NEQ predicate on the "f3" field.
func F3NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF3, v))
}

// F3In applies the In predicate on the "f3" field.
func F3In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF3, vs...))
}

// F3NotIn applies the NotIn predicate on the "f3" field.
func F3NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF3, vs...))
}

// F3GT applies the GT predicate on the "f3" field.
func F3GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF3, v))
}

// F3GTE applies the GTE predicate on the "f3" field.
func F3GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF3, v))
}

// F3LT applies the LT predicate on the "f3" field.
func F3LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF3, v))
}

// F3LTE applies the LTE predicate on the "f3" field.
func F3LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF3, v))
}

// F3Contains applies the Contains predicate on the "f3" field.
func F3Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF3, v))
}

// F3HasPrefix applies the HasPrefix predicate on the "f3" field.
func F3HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF3, v))
}

// F3HasSuffix applies the HasSuffix predicate on the "f3" field.
func F3HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF3, v))
}

// F3EqualFold applies the EqualFold predicate on the "f3" field.
func F3EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF3, v))
}

// F3ContainsFold applies the ContainsFold predicate on the "f3" field.
func F3ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF3, v))
}

// F4EQ applies the EQ predicate on the "f4" field.
func F4EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF4, v))
}

// F4NEQ applies the NEQ predicate on the "f4" field.
func F4NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF4, v))
}

// F4In applies the In predicate on the "f4" field.
func F4In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF4, vs...))
}

// F4NotIn applies the NotIn predicate on the "f4" field.
func F4NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF4, vs...))
}

// F4GT applies the GT predicate on the "f4" field.
func F4GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF4, v))
}

// F4GTE applies the GTE predicate on the "f4" field.
func F4GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF4, v))
}

// F4LT applies the LT predicate on the "f4" field.
func F4LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF4, v))
}

// F4LTE applies the LTE predicate on the "f4" field.
func F4LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF4, v))
}

// F4Contains applies the Contains predicate on the "f4" field.
func F4Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF4, v))
}

// F4HasPrefix applies the HasPrefix predicate on the "f4" field.
func F4HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF4, v))
}

// F4HasSuffix applies the HasSuffix predicate on the "f4" field.
func F4HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF4, v))
}

// F4EqualFold applies the EqualFold predicate on the "f4" field.
func F4EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF4, v))
}

// F4ContainsFold applies the ContainsFold predicate on the "f4" field.
func F4ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF4, v))
}

// F5EQ applies the EQ predicate on the "f5" field.
func F5EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF5, v))
}

// F5NEQ applies the NEQ predicate on the "f5" field.
func F5NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF5, v))
}

// F5In applies the In predicate on the "f5" field.
func F5In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF5, vs...))
}

// F5NotIn applies the NotIn predicate on the "f5" field.
func F5NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF5, vs...))
}

// F5GT applies the GT predicate on the "f5" field.
func F5GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF5, v))
}

// F5GTE applies the GTE predicate on the "f5" field.
func F5GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF5, v))
}

// F5LT applies the LT predicate on the "f5" field.
func F5LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF5, v))
}

// F5LTE applies the LTE predicate on the "f5" field.
func F5LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF5, v))
}

// F5Contains applies the Contains predicate on the "f5" field.
func F5Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF5, v))
}

// F5HasPrefix applies the HasPrefix predicate on the "f5" field.
func F5HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF5, v))
}

// F5HasSuffix applies the HasSuffix predicate on the "f5" field.
func F5HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF5, v))
}

// F5EqualFold applies the EqualFold predicate on the "f5" field.
func F5EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF5, v))
}

// F5ContainsFold applies the ContainsFold predicate on the "f5" field.
func F5ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF5, v))
}

// F6EQ applies the EQ predicate on the "f6" field.
func F6EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF6, v))
}

// F6NEQ applies the NEQ predicate on the "f6" field.
func F6NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF6, v))
}

// F6In applies the In predicate on the "f6" field.
func F6In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF6, vs...))
}

// F6NotIn applies the NotIn predicate on the "f6" field.
func F6NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF6, vs...))
}

// F6GT applies the GT predicate on the "f6" field.
func F6GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF6, v))
}

// F6GTE applies the GTE predicate on the "f6" field.
func F6GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF6, v))
}

// F6LT applies the LT predicate on the "f6" field.
func F6LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF6, v))
}

// F6LTE applies the LTE predicate on the "f6" field.
func F6LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF6, v))
}

// F6Contains applies the Contains predicate on the "f6" field.
func F6Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF6, v))
}

// F6HasPrefix applies the HasPrefix predicate on the "f6" field.
func F6HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF6, v))
}

// F6HasSuffix applies the HasSuffix predicate on the "f6" field.
func F6HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF6, v))
}

// F6EqualFold applies the EqualFold predicate on the "f6" field.
func F6EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF6, v))
}

// F6ContainsFold applies the ContainsFold predicate on the "f6" field.
func F6ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF6, v))
}

// F7EQ applies the EQ predicate on the "f7" field.
func F7EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF7, v))
}

// F7NEQ applies the NEQ predicate on the "f7" field.
func F7NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF7, v))
}

// F7In applies the In predicate on the "f7" field.
func F7In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF7, vs...))
}

// F7NotIn applies the NotIn predicate on the "f7" field.
func F7NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF7, vs...))
}

// F7GT applies the GT predicate on the "f7" field.
func F7GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF7, v))
}

// F7GTE applies the GTE predicate on the "f7" field.
func F7GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF7, v))
}

// F7LT applies the LT predicate on the "f7" field.
func F7LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF7, v))
}

// F7LTE applies the LTE predicate on the "f7" field.
func F7LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF7, v))
}

// F7Contains applies the Contains predicate on the "f7" field.
func F7Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF7, v))
}

// F7HasPrefix applies the HasPrefix predicate on the "f7" field.
func F7HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF7, v))
}

// F7HasSuffix applies the HasSuffix predicate on the "f7" field.
func F7HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF7, v))
}

// F7EqualFold applies the EqualFold predicate on the "f7" field.
func F7EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF7, v))
}

// F7ContainsFold applies the ContainsFold predicate on the "f7" field.
func F7ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF7, v))
}

// F8EQ applies the EQ predicate on the "f8" field.
func F8EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF8, v))
}

// F8NEQ applies the NEQ predicate on the "f8" field.
func F8NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF8, v))
}

// F8In applies the In predicate on the "f8" field.
func F8In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF8, vs...))
}

// F8NotIn applies the NotIn predicate on the "f8" field.
func F8NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF8, vs...))
}

// F8GT applies the GT predicate on the "f8" field.
func F8GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF8, v))
}

// F8GTE applies the GTE predicate on the "f8" field.
func F8GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF8, v))
}

// F8LT applies the LT predicate on the "f8" field.
func F8LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF8, v))
}

// F8LTE applies the LTE predicate on the "f8" field.
func F8LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF8, v))
}

// F8Contains applies the Contains predicate on the "f8" field.
func F8Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF8, v))
}

// F8HasPrefix applies the HasPrefix predicate on the "f8" field.
func F8HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF8, v))
}

// F8HasSuffix applies the HasSuffix predicate on the "f8" field.
func F8HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF8, v))
}

// F8EqualFold applies the EqualFold predicate on the "f8" field.
func F8EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF8, v))
}

// F8ContainsFold applies the ContainsFold predicate on the "f8" field.
func F8ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF8, v))
}

// F9EQ applies the EQ predicate on the "f9" field.
func F9EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF9, v))
}

// F9NEQ applies the NEQ predicate on the "f9" field.
func F9NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF9, v))
}

// F9In applies the In predicate on the "f9" field.
func F9In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF9, vs...))
}

// F9NotIn applies the NotIn predicate on the "f9" field.
func F9NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF9, vs...))
}

// F9GT applies the GT predicate on the "f9" field.
func F9GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF9, v))
}

// F9GTE applies the GTE predicate on the "f9" field.
func F9GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF9, v))
}

// F9LT applies the LT predicate on the "f9" field.
func F9LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF9, v))
}

// F9LTE applies the LTE predicate on the "f9" field.
func F9LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF9, v))
}

// F9Contains applies the Contains predicate on the "f9" field.
func F9Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF9, v))
}

// F9HasPrefix applies the HasPrefix predicate on the "f9" field.
func F9HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF9, v))
}

// F9HasSuffix applies the HasSuffix predicate on the "f9" field.
func F9HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF9, v))
}

// F9EqualFold applies the EqualFold predicate on the "f9" field.
func F9EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF9, v))
}

// F9ContainsFold applies the ContainsFold predicate on the "f9" field.
func F9ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF9, v))
}

// F10EQ applies the EQ predicate on the "f10" field.
func F10EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF10, v))
}

// F10NEQ applies the NEQ predicate on the "f10" field.
func F10NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF10, v))
}

// F10In applies the In predicate on the "f10" field.
func F10In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF10, vs...))
}

// F10NotIn applies the NotIn predicate on the "f10" field.
func F10NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF10, vs...))
}

// F10GT applies the GT predicate on the "f10" field.
func F10GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF10, v))
}

// F10GTE applies the GTE predicate on the "f10" field.
func F10GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF10, v))
}

// F10LT applies the LT predicate on the "f10" field.
func F10LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF10, v))
}

// F10LTE applies the LTE predicate on the "f10" field.
func F10LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF10, v))
}

// F10Contains applies the Contains predicate on the "f10" field.
func F10Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF10, v))
}

// F10HasPrefix applies the HasPrefix predicate on the "f10" field.
func F10HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF10, v))
}

// F10HasSuffix applies the HasSuffix predicate on the "f10" field.
func F10HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF10, v))
}

// F10EqualFold applies the EqualFold predicate on the "f10" field.
func F10EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF10, v))
}

// F10ContainsFold applies the ContainsFold predicate on the "f10" field.
func F10ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF10, v))
}

// F11EQ applies the EQ predicate on the "f11" field.
func F11EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF11, v))
}

// F11NEQ applies the NEQ predicate on the "f11" field.
func F11NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF11, v))
}

// F11In applies the In predicate on the "f11" field.
func F11In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF11, vs...))
}

// F11NotIn applies the NotIn predicate on the "f11" field.
func F11NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF11, vs...))
}

// F11GT applies the GT predicate on the "f11" field.
func F11GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF11, v))
}

// F11GTE applies the GTE predicate on the "f11" field.
func F11GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF11, v))
}

// F11LT applies the LT predicate on the "f11" field.
func F11LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF11, v))
}

// F11LTE applies the LTE predicate on the "f11" field.
func F11LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF11, v))
}

// F11Contains applies the Contains predicate on the "f11" field.
func F11Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF11, v))
}

// F11HasPrefix applies the HasPrefix predicate on the "f11" field.
func F11HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF11, v))
}

// F11HasSuffix applies the HasSuffix predicate on the "f11" field.
func F11HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF11, v))
}

// F11EqualFold applies the EqualFold predicate on the "f11" field.
func F11EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF11, v))
}

// F11ContainsFold applies the ContainsFold predicate on the "f11" field.
func F11ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF11, v))
}

// F12EQ applies the EQ predicate on the "f12" field.
func F12EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF12, v))
}

// F12NEQ applies the NEQ predicate on the "f12" field.
func F12NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF12, v))
}

// F12In applies the In predicate on the "f12" field.
func F12In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF12, vs...))
}

// F12NotIn applies the NotIn predicate on the "f12" field.
func F12NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF12, vs...))
}

// F12GT applies the GT predicate on the "f12" field.
func F12GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF12, v))
}

// F12GTE applies the GTE predicate on the "f12" field.
func F12GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF12, v))
}

// F12LT applies the LT predicate on the "f12" field.
func F12LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF12, v))
}

// F12LTE applies the LTE predicate on the "f12" field.
func F12LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF12, v))
}

// F12Contains applies the Contains predicate on the "f12" field.
func F12Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF12, v))
}

// F12HasPrefix applies the HasPrefix predicate on the "f12" field.
func F12HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF12, v))
}

// F12HasSuffix applies the HasSuffix predicate on the "f12" field.
func F12HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF12, v))
}

// F12EqualFold applies the EqualFold predicate on the "f12" field.
func F12EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF12, v))
}

// F12ContainsFold applies the ContainsFold predicate on the "f12" field.
func F12ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF12, v))
}

// F13EQ applies the EQ predicate on the "f13" field.
func F13EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF13, v))
}

// F13NEQ applies the NEQ predicate on the "f13" field.
func F13NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF13, v))
}

// F13In applies the In predicate on the "f13" field.
func F13In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF13, vs...))
}

// F13NotIn applies the NotIn predicate on the "f13" field.
func F13NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF13, vs...))
}

// F13GT applies the GT predicate on the "f13" field.
func F13GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF13, v))
}

// F13GTE applies the GTE predicate on the "f13" field.
func F13GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF13, v))
}

// F13LT applies the LT predicate on the "f13" field.
func F13LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF13, v))
}

// F13LTE applies the LTE predicate on the "f13" field.
func F13LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF13, v))
}

// F13Contains applies the Contains predicate on the "f13" field.
func F13Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF13, v))
}

// F13HasPrefix applies the HasPrefix predicate on the "f13" field.
func F13HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF13, v))
}

// F13HasSuffix applies the HasSuffix predicate on the "f13" field.
func F13HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF13, v))
}

// F13EqualFold applies the EqualFold predicate on the "f13" field.
func F13EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF13, v))
}

// F13ContainsFold applies the ContainsFold predicate on the "f13" field.
func F13ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF13, v))
}

// F14EQ applies the EQ predicate on the "f14" field.
func F14EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF14, v))
}

// F14NEQ applies the NEQ predicate on the "f14" field.
func F14NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF14, v))
}

// F14In applies the In predicate on the "f14" field.
func F14In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF14, vs...))
}

// F14NotIn applies the NotIn predicate on the "f14" field.
func F14NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF14, vs...))
}

// F14GT applies the GT predicate on the "f14" field.
func F14GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF14, v))
}

// F14GTE applies the GTE predicate on the "f14" field.
func F14GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF14, v))
}

// F14LT applies the LT predicate on the "f14" field.
func F14LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF14, v))
}

// F14LTE applies the LTE predicate on the "f14" field.
func F14LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF14, v))
}

// F14Contains applies the Contains predicate on the "f14" field.
func F14Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF14, v))
}

// F14HasPrefix applies the HasPrefix predicate on the "f14" field.
func F14HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF14, v))
}

// F14HasSuffix applies the HasSuffix predicate on the "f14" field.
func F14HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF14, v))
}

// F14EqualFold applies the EqualFold predicate on the "f14" field.
func F14EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF14, v))
}

// F14ContainsFold applies the ContainsFold predicate on the "f14" field.
func F14ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF14, v))
}

// F15EQ applies the EQ predicate on the "f15" field.
func F15EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF15, v))
}

// F15NEQ applies the NEQ predicate on the "f15" field.
func F15NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF15, v))
}

// F15In applies the In predicate on the "f15" field.
func F15In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF15, vs...))
}

// F15NotIn applies the NotIn predicate on the "f15" field.
func F15NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF15, vs...))
}

// F15GT applies the GT predicate on the "f15" field.
func F15GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF15, v))
}

// F15GTE applies the GTE predicate on the "f15" field.
func F15GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF15, v))
}

// F15LT applies the LT predicate on the "f15" field.
func F15LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF15, v))
}

// F15LTE applies the LTE predicate on the "f15" field.
func F15LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF15, v))
}

// F15Contains applies the Contains predicate on the "f15" field.
func F15Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF15, v))
}

// F15HasPrefix applies the HasPrefix predicate on the "f15" field.
func F15HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF15, v))
}

// F15HasSuffix applies the HasSuffix predicate on the "f15" field.
func F15HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF15, v))
}

// F15EqualFold applies the EqualFold predicate on the "f15" field.
func F15EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF15, v))
}

// F15ContainsFold applies the ContainsFold predicate on the "f15" field.
func F15ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF15, v))
}

// F16EQ applies the EQ predicate on the "f16" field.
func F16EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF16, v))
}

// F16NEQ applies the NEQ predicate on the "f16" field.
func F16NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF16, v))
}

// F16In applies the In predicate on the "f16" field.
func F16In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF16, vs...))
}

// F16NotIn applies the NotIn predicate on the "f16" field.
func F16NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF16, vs...))
}

// F16GT applies the GT predicate on the "f16" field.
func F16GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF16, v))
}

// F16GTE applies the GTE predicate on the "f16" field.
func F16GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF16, v))
}

// F16LT applies the LT predicate on the "f16" field.
func F16LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF16, v))
}

// F16LTE applies the LTE predicate on the "f16" field.
func F16LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF16, v))
}

// F16Contains applies the Contains predicate on the "f16" field.
func F16Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF16, v))
}

// F16HasPrefix applies the HasPrefix predicate on the "f16" field.
func F16HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF16, v))
}

// F16HasSuffix applies the HasSuffix predicate on the "f16" field.
func F16HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF16, v))
}

// F16EqualFold applies the EqualFold predicate on the "f16" field.
func F16EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF16, v))
}

// F16ContainsFold applies the ContainsFold predicate on the "f16" field.
func F16ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF16, v))
}

// F17EQ applies the EQ predicate on the "f17" field.
func F17EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF17, v))
}

// F17NEQ applies the NEQ predicate on the "f17" field.
func F17NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF17, v))
}

// F17In applies the In predicate on the "f17" field.
func F17In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF17, vs...))
}

// F17NotIn applies the NotIn predicate on the "f17" field.
func F17NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF17, vs...))
}

// F17GT applies the GT predicate on the "f17" field.
func F17GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF17, v))
}

// F17GTE applies the GTE predicate on the "f17" field.
func F17GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF17, v))
}

// F17LT applies the LT predicate on the "f17" field.
func F17LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF17, v))
}

// F17LTE applies the LTE predicate on the "f17" field.
func F17LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF17, v))
}

// F17Contains applies the Contains predicate on the "f17" field.
func F17Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF17, v))
}

// F17HasPrefix applies the HasPrefix predicate on the "f17" field.
func F17HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF17, v))
}

// F17HasSuffix applies the HasSuffix predicate on the "f17" field.
func F17HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF17, v))
}

// F17EqualFold applies the EqualFold predicate on the "f17" field.
func F17EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF17, v))
}

// F17ContainsFold applies the ContainsFold predicate on the "f17" field.
func F17ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF17, v))
}

// F18EQ applies the EQ predicate on the "f18" field.
func F18EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF18, v))
}

// F18NEQ applies the NEQ predicate on the "f18" field.
func F18NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF18, v))
}

// F18In applies the In predicate on the "f18" field.
func F18In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF18, vs...))
}

// F18NotIn applies the NotIn predicate on the "f18" field.
func F18NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF18, vs...))
}

// F18GT applies the GT predicate on the "f18" field.
func F18GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF18, v))
}

// F18GTE applies the GTE predicate on the "f18" field.
func F18GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF18, v))
}

// F18LT applies the LT predicate on the "f18" field.
func F18LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF18, v))
}

// F18LTE applies the LTE predicate on the "f18" field.
func F18LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF18, v))
}

// F18Contains applies the Contains predicate on the "f18" field.
func F18Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF18, v))
}

// F18HasPrefix applies the HasPrefix predicate on the "f18" field.
func F18HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF18, v))
}

// F18HasSuffix applies the HasSuffix predicate on the "f18" field.
func F18HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF18, v))
}

// F18EqualFold applies the EqualFold predicate on the "f18" field.
func F18EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF18, v))
}

// F18ContainsFold applies the ContainsFold predicate on the "f18" field.
func F18ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF18, v))
}

// F19EQ applies the EQ predicate on the "f19" field.
func F19EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF19, v))
}

// F19NEQ applies the NEQ predicate on the "f19" field.
func F19NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF19, v))
}

// F19In applies the In predicate on the "f19" field.
func F19In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF19, vs...))
}

// F19NotIn applies the NotIn predicate on the "f19" field.
func F19NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF19, vs...))
}

// F19GT applies the GT predicate on the "f19" field.
func F19GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF19, v))
}

// F19GTE applies the GTE predicate on the "f19" field.
func F19GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF19, v))
}

// F19LT applies the LT predicate on the "f19" field.
func F19LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF19, v))
}

// F19LTE applies the LTE predicate on the "f19" field.
func F19LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF19, v))
}

// F19Contains applies the Contains predicate on the "f19" field.
func F19Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF19, v))
}

// F19HasPrefix applies the HasPrefix predicate on the "f19" field.
func F19HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF19, v))
}

// F19HasSuffix applies the HasSuffix predicate on the "f19" field.
func F19HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF19, v))
}

// F19EqualFold applies the EqualFold predicate on the "f19" field.
func F19EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF19, v))
}

// F19ContainsFold applies the ContainsFold predicate on the "f19" field.
func F19ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF19, v))
}

// F20EQ applies the EQ predicate on the "f20" field.
func F20EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF20, v))
}

// F20NEQ applies the NEQ predicate on the "f20" field.
func F20NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF20, v))
}

// F20In applies the In predicate on the "f20" field.
func F20In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF20, vs...))
}

// F20NotIn applies the NotIn predicate on the "f20" field.
func F20NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF20, vs...))
}

// F20GT applies the GT predicate on the "f20" field.
func F20GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF20, v))
}

// F20GTE applies the GTE predicate on the "f20" field.
func F20GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF20, v))
}

// F20LT applies the LT predicate on the "f20" field.
func F20LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF20, v))
}

// F20LTE applies the LTE predicate on the "f20" field.
func F20LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF20, v))
}

// F20Contains applies the Contains predicate on the "f20" field.
func F20Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF20, v))
}

// F20HasPrefix applies the HasPrefix predicate on the "f20" field.
func F20HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF20, v))
}

// F20HasSuffix applies the HasSuffix predicate on the "f20" field.
func F20HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF20, v))
}

// F20EqualFold applies the EqualFold predicate on the "f20" field.
func F20EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF20, v))
}

// F20ContainsFold applies the ContainsFold predicate on the "f20" field.
func F20ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF20, v))
}

// F21EQ applies the EQ predicate on the "f21" field.
func F21EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF21, v))
}

// F21NEQ applies the NEQ predicate on the "f21" field.
func F21NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF21, v))
}

// F21In applies the In predicate on the "f21" field.
func F21In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF21, vs...))
}

// F21NotIn applies the NotIn predicate on the "f21" field.
func F21NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF21, vs...))
}

// F21GT applies the GT predicate on the "f21" field.
func F21GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF21, v))
}

// F21GTE applies the GTE predicate on the "f21" field.
func F21GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF21, v))
}

// F21LT applies the LT predicate on the "f21" field.
func F21LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF21, v))
}

// F21LTE applies the LTE predicate on the "f21" field.
func F21LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF21, v))
}

// F21Contains applies the Contains predicate on the "f21" field.
func F21Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF21, v))
}

// F21HasPrefix applies the HasPrefix predicate on the "f21" field.
func F21HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF21, v))
}

// F21HasSuffix applies the HasSuffix predicate on the "f21" field.
func F21HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF21, v))
}

// F21EqualFold applies the EqualFold predicate on the "f21" field.
func F21EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF21, v))
}

// F21ContainsFold applies the ContainsFold predicate on the "f21" field.
func F21ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF21, v))
}

// F22EQ applies the EQ predicate on the "f22" field.
func F22EQ(v string) predicate.Class {
	return predicate.Class(sql.FieldEQ(FieldF22, v))
}

// F22NEQ applies the NEQ predicate on the "f22" field.
func F22NEQ(v string) predicate.Class {
	return predicate.Class(sql.FieldNEQ(FieldF22, v))
}

// F22In applies the In predicate on the "f22" field.
func F22In(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldIn(FieldF22, vs...))
}

// F22NotIn applies the NotIn predicate on the "f22" field.
func F22NotIn(vs ...string) predicate.Class {
	return predicate.Class(sql.FieldNotIn(FieldF22, vs...))
}

// F22GT applies the GT predicate on the "f22" field.
func F22GT(v string) predicate.Class {
	return predicate.Class(sql.FieldGT(FieldF22, v))
}

// F22GTE applies the GTE predicate on the "f22" field.
func F22GTE(v string) predicate.Class {
	return predicate.Class(sql.FieldGTE(FieldF22, v))
}

// F22LT applies the LT predicate on the "f22" field.
func F22LT(v string) predicate.Class {
	return predicate.Class(sql.FieldLT(FieldF22, v))
}

// F22LTE applies the LTE predicate on the "f22" field.
func F22LTE(v string) predicate.Class {
	return predicate.Class(sql.FieldLTE(FieldF22, v))
}

// F22Contains applies the Contains predicate on the "f22" field.
func F22Contains(v string) predicate.Class {
	return predicate.Class(sql.FieldContains(FieldF22, v))
}

// F22HasPrefix applies the HasPrefix predicate on the "f22" field.
func F22HasPrefix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasPrefix(FieldF22, v))
}

// F22HasSuffix applies the HasSuffix predicate on the "f22" field.
func F22HasSuffix(v string) predicate.Class {
	return predicate.Class(sql.FieldHasSuffix(FieldF22, v))
}

// F22EqualFold applies the EqualFold predicate on the "f22" field.
func F22EqualFold(v string) predicate.Class {
	return predicate.Class(sql.FieldEqualFold(FieldF22, v))
}

// F22ContainsFold applies the ContainsFold predicate on the "f22" field.
func F22ContainsFold(v string) predicate.Class {
	return predicate.Class(sql.FieldContainsFold(FieldF22, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Class) predicate.Class {
	return predicate.Class(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Class) predicate.Class {
	return predicate.Class(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Class) predicate.Class {
	return predicate.Class(func(s *sql.Selector) {
		p(s.Not())
	})
}
