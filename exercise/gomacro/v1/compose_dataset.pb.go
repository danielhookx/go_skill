// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.1
// source: ems/v1/compose_dataset.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryComposeDatasetBankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagssPage     int32  `protobuf:"varint,1,opt,name=tagssPage,proto3" json:"tagssPage,omitempty"` //返回值tagss维度的分页
	TagssPageSize int32  `protobuf:"varint,2,opt,name=tagssPageSize,proto3" json:"tagssPageSize,omitempty"`
	KeyPage       int32  `protobuf:"varint,3,opt,name=keyPage,proto3" json:"keyPage,omitempty"` //返回值key和tags维度的分页
	KeyPageSize   int32  `protobuf:"varint,4,opt,name=keyPageSize,proto3" json:"keyPageSize,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`     // 组件名称
	BankNo        string `protobuf:"bytes,6,opt,name=bankNo,proto3" json:"bankNo,omitempty"` // 堆序号,多选,“,”分隔
	RackNo        string `protobuf:"bytes,7,opt,name=rackNo,proto3" json:"rackNo,omitempty"` // 簇序号,多选,“,”分隔
	PackNo        string `protobuf:"bytes,8,opt,name=packNo,proto3" json:"packNo,omitempty"` // 电池包序号,多选,“,”分隔
}

func (x *QueryComposeDatasetBankRequest) Reset() {
	*x = QueryComposeDatasetBankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryComposeDatasetBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryComposeDatasetBankRequest) ProtoMessage() {}

func (x *QueryComposeDatasetBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryComposeDatasetBankRequest.ProtoReflect.Descriptor instead.
func (*QueryComposeDatasetBankRequest) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{0}
}

func (x *QueryComposeDatasetBankRequest) GetTagssPage() int32 {
	if x != nil {
		return x.TagssPage
	}
	return 0
}

func (x *QueryComposeDatasetBankRequest) GetTagssPageSize() int32 {
	if x != nil {
		return x.TagssPageSize
	}
	return 0
}

func (x *QueryComposeDatasetBankRequest) GetKeyPage() int32 {
	if x != nil {
		return x.KeyPage
	}
	return 0
}

func (x *QueryComposeDatasetBankRequest) GetKeyPageSize() int32 {
	if x != nil {
		return x.KeyPageSize
	}
	return 0
}

func (x *QueryComposeDatasetBankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryComposeDatasetBankRequest) GetBankNo() string {
	if x != nil {
		return x.BankNo
	}
	return ""
}

func (x *QueryComposeDatasetBankRequest) GetRackNo() string {
	if x != nil {
		return x.RackNo
	}
	return ""
}

func (x *QueryComposeDatasetBankRequest) GetPackNo() string {
	if x != nil {
		return x.PackNo
	}
	return ""
}

type ComposeColumnName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *ComposeColumnName) Reset() {
	*x = ComposeColumnName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeColumnName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeColumnName) ProtoMessage() {}

func (x *ComposeColumnName) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeColumnName.ProtoReflect.Descriptor instead.
func (*ComposeColumnName) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{1}
}

func (x *ComposeColumnName) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type ComposeColumnDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K   *int32           `protobuf:"varint,1,opt,name=k,proto3,oneof" json:"k,omitempty"`                                                                                     // 原始数据
	V   string           `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`                                                                                            // value 显示内容
	C   *string          `protobuf:"bytes,3,opt,name=c,proto3,oneof" json:"c,omitempty"`                                                                                      // color 颜色
	Bc  *string          `protobuf:"bytes,4,opt,name=bc,proto3,oneof" json:"bc,omitempty"`                                                                                    // backgroud color 背景色
	Bl  []int32          `protobuf:"varint,5,rep,packed,name=bl,proto3" json:"bl,omitempty"`                                                                                  // button list
	Bt  map[int32]string `protobuf:"bytes,6,rep,name=bt,proto3" json:"bt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // button type 按钮枚举表
	A   *int32           `protobuf:"varint,7,opt,name=a,proto3,oneof" json:"a,omitempty"`                                                                                     // address 共享内存地址
	Bit *int32           `protobuf:"varint,8,opt,name=bit,proto3,oneof" json:"bit,omitempty"`                                                                                 // bit 位偏移
}

func (x *ComposeColumnDataItem) Reset() {
	*x = ComposeColumnDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeColumnDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeColumnDataItem) ProtoMessage() {}

func (x *ComposeColumnDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeColumnDataItem.ProtoReflect.Descriptor instead.
func (*ComposeColumnDataItem) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{2}
}

func (x *ComposeColumnDataItem) GetK() int32 {
	if x != nil && x.K != nil {
		return *x.K
	}
	return 0
}

func (x *ComposeColumnDataItem) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *ComposeColumnDataItem) GetC() string {
	if x != nil && x.C != nil {
		return *x.C
	}
	return ""
}

func (x *ComposeColumnDataItem) GetBc() string {
	if x != nil && x.Bc != nil {
		return *x.Bc
	}
	return ""
}

func (x *ComposeColumnDataItem) GetBl() []int32 {
	if x != nil {
		return x.Bl
	}
	return nil
}

func (x *ComposeColumnDataItem) GetBt() map[int32]string {
	if x != nil {
		return x.Bt
	}
	return nil
}

func (x *ComposeColumnDataItem) GetA() int32 {
	if x != nil && x.A != nil {
		return *x.A
	}
	return 0
}

func (x *ComposeColumnDataItem) GetBit() int32 {
	if x != nil && x.Bit != nil {
		return *x.Bit
	}
	return 0
}

type ComposeColumnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*ComposeColumnDataItem `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ComposeColumnData) Reset() {
	*x = ComposeColumnData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeColumnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeColumnData) ProtoMessage() {}

func (x *ComposeColumnData) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeColumnData.ProtoReflect.Descriptor instead.
func (*ComposeColumnData) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{3}
}

func (x *ComposeColumnData) GetTags() []*ComposeColumnDataItem {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ComposeColumnKeyEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ComposeColumnKeyEnum) Reset() {
	*x = ComposeColumnKeyEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeColumnKeyEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeColumnKeyEnum) ProtoMessage() {}

func (x *ComposeColumnKeyEnum) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeColumnKeyEnum.ProtoReflect.Descriptor instead.
func (*ComposeColumnKeyEnum) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{4}
}

type ComposeColumnKeyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K *string `protobuf:"bytes,1,opt,name=k,proto3,oneof" json:"k,omitempty"` // name 列名,原始key, 默认省略不发，以后可能需要
	V string  `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`       // value 显示内容,通过key翻译后的
}

func (x *ComposeColumnKeyItem) Reset() {
	*x = ComposeColumnKeyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeColumnKeyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeColumnKeyItem) ProtoMessage() {}

func (x *ComposeColumnKeyItem) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeColumnKeyItem.ProtoReflect.Descriptor instead.
func (*ComposeColumnKeyItem) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{5}
}

func (x *ComposeColumnKeyItem) GetK() string {
	if x != nil && x.K != nil {
		return *x.K
	}
	return ""
}

func (x *ComposeColumnKeyItem) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type ComposeDatasetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            []*ComposeColumnKeyItem `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	Tagss          []*ComposeColumnData    `protobuf:"bytes,2,rep,name=tagss,proto3" json:"tagss,omitempty"`
	SpecificOffset string                  `protobuf:"bytes,3,opt,name=specificOffset,proto3" json:"specificOffset,omitempty"` // specificOffset 是否是单个堆数据、簇数据
	TagssTotal     int32                   `protobuf:"varint,4,opt,name=tagssTotal,proto3" json:"tagssTotal,omitempty"`
	TagssPage      int32                   `protobuf:"varint,5,opt,name=tagssPage,proto3" json:"tagssPage,omitempty"`
	TagssPageSize  int32                   `protobuf:"varint,6,opt,name=tagssPageSize,proto3" json:"tagssPageSize,omitempty"`
	KeyTotal       int32                   `protobuf:"varint,7,opt,name=keyTotal,proto3" json:"keyTotal,omitempty"`
	KeyPage        int32                   `protobuf:"varint,8,opt,name=keyPage,proto3" json:"keyPage,omitempty"`
	KeyPageSize    int32                   `protobuf:"varint,9,opt,name=keyPageSize,proto3" json:"keyPageSize,omitempty"`
}

func (x *ComposeDatasetList) Reset() {
	*x = ComposeDatasetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeDatasetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeDatasetList) ProtoMessage() {}

func (x *ComposeDatasetList) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeDatasetList.ProtoReflect.Descriptor instead.
func (*ComposeDatasetList) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{6}
}

func (x *ComposeDatasetList) GetKey() []*ComposeColumnKeyItem {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ComposeDatasetList) GetTagss() []*ComposeColumnData {
	if x != nil {
		return x.Tagss
	}
	return nil
}

func (x *ComposeDatasetList) GetSpecificOffset() string {
	if x != nil {
		return x.SpecificOffset
	}
	return ""
}

func (x *ComposeDatasetList) GetTagssTotal() int32 {
	if x != nil {
		return x.TagssTotal
	}
	return 0
}

func (x *ComposeDatasetList) GetTagssPage() int32 {
	if x != nil {
		return x.TagssPage
	}
	return 0
}

func (x *ComposeDatasetList) GetTagssPageSize() int32 {
	if x != nil {
		return x.TagssPageSize
	}
	return 0
}

func (x *ComposeDatasetList) GetKeyTotal() int32 {
	if x != nil {
		return x.KeyTotal
	}
	return 0
}

func (x *ComposeDatasetList) GetKeyPage() int32 {
	if x != nil {
		return x.KeyPage
	}
	return 0
}

func (x *ComposeDatasetList) GetKeyPageSize() int32 {
	if x != nil {
		return x.KeyPageSize
	}
	return 0
}

type QueryComposeDatasetBankReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32               `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *ComposeDatasetList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryComposeDatasetBankReply) Reset() {
	*x = QueryComposeDatasetBankReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryComposeDatasetBankReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryComposeDatasetBankReply) ProtoMessage() {}

func (x *QueryComposeDatasetBankReply) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryComposeDatasetBankReply.ProtoReflect.Descriptor instead.
func (*QueryComposeDatasetBankReply) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{7}
}

func (x *QueryComposeDatasetBankReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryComposeDatasetBankReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryComposeDatasetBankReply) GetData() *ComposeDatasetList {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateComposeDatasetBankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`             // 组件名称
	ColumnName string  `protobuf:"bytes,2,opt,name=columnName,proto3" json:"columnName,omitempty"` // 字段名称
	Value      float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`         // 值
	BankNo     int32   `protobuf:"varint,4,opt,name=bankNo,proto3" json:"bankNo,omitempty"`        // 堆序号
	RackNo     int32   `protobuf:"varint,5,opt,name=rackNo,proto3" json:"rackNo,omitempty"`        // 簇序号
	PackNo     int32   `protobuf:"varint,6,opt,name=packNo,proto3" json:"packNo,omitempty"`        // 电池包序号
	Address    int32   `protobuf:"varint,7,opt,name=address,proto3" json:"address,omitempty"`      // 共享内存地址
}

func (x *UpdateComposeDatasetBankRequest) Reset() {
	*x = UpdateComposeDatasetBankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComposeDatasetBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComposeDatasetBankRequest) ProtoMessage() {}

func (x *UpdateComposeDatasetBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComposeDatasetBankRequest.ProtoReflect.Descriptor instead.
func (*UpdateComposeDatasetBankRequest) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateComposeDatasetBankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateComposeDatasetBankRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *UpdateComposeDatasetBankRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UpdateComposeDatasetBankRequest) GetBankNo() int32 {
	if x != nil {
		return x.BankNo
	}
	return 0
}

func (x *UpdateComposeDatasetBankRequest) GetRackNo() int32 {
	if x != nil {
		return x.RackNo
	}
	return 0
}

func (x *UpdateComposeDatasetBankRequest) GetPackNo() int32 {
	if x != nil {
		return x.PackNo
	}
	return 0
}

func (x *UpdateComposeDatasetBankRequest) GetAddress() int32 {
	if x != nil {
		return x.Address
	}
	return 0
}

type UpdateComposeDatasetBankReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *UpdateComposeDatasetBankResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateComposeDatasetBankReply) Reset() {
	*x = UpdateComposeDatasetBankReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComposeDatasetBankReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComposeDatasetBankReply) ProtoMessage() {}

func (x *UpdateComposeDatasetBankReply) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComposeDatasetBankReply.ProtoReflect.Descriptor instead.
func (*UpdateComposeDatasetBankReply) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateComposeDatasetBankReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateComposeDatasetBankReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateComposeDatasetBankReply) GetData() *UpdateComposeDatasetBankResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type ComposeDatasetSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rate   string `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	BankNo string `protobuf:"bytes,3,opt,name=BankNo,proto3" json:"BankNo,omitempty"`
	RackNo string `protobuf:"bytes,4,opt,name=RackNo,proto3" json:"RackNo,omitempty"`
	PackNo string `protobuf:"bytes,5,opt,name=PackNo,proto3" json:"PackNo,omitempty"`
}

func (x *ComposeDatasetSub) Reset() {
	*x = ComposeDatasetSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeDatasetSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeDatasetSub) ProtoMessage() {}

func (x *ComposeDatasetSub) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeDatasetSub.ProtoReflect.Descriptor instead.
func (*ComposeDatasetSub) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{10}
}

func (x *ComposeDatasetSub) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComposeDatasetSub) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ComposeDatasetSub) GetBankNo() string {
	if x != nil {
		return x.BankNo
	}
	return ""
}

func (x *ComposeDatasetSub) GetRackNo() string {
	if x != nil {
		return x.RackNo
	}
	return ""
}

func (x *ComposeDatasetSub) GetPackNo() string {
	if x != nil {
		return x.PackNo
	}
	return ""
}

type SubscribeComposeDatasetBankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broker   string               `protobuf:"bytes,1,opt,name=broker,proto3" json:"broker,omitempty"`
	Topic    string               `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Composes []*ComposeDatasetSub `protobuf:"bytes,3,rep,name=composes,proto3" json:"composes,omitempty"`
}

func (x *SubscribeComposeDatasetBankRequest) Reset() {
	*x = SubscribeComposeDatasetBankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeComposeDatasetBankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeComposeDatasetBankRequest) ProtoMessage() {}

func (x *SubscribeComposeDatasetBankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeComposeDatasetBankRequest.ProtoReflect.Descriptor instead.
func (*SubscribeComposeDatasetBankRequest) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{11}
}

func (x *SubscribeComposeDatasetBankRequest) GetBroker() string {
	if x != nil {
		return x.Broker
	}
	return ""
}

func (x *SubscribeComposeDatasetBankRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SubscribeComposeDatasetBankRequest) GetComposes() []*ComposeDatasetSub {
	if x != nil {
		return x.Composes
	}
	return nil
}

type SubscribeComposeDatasetBankReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SubscribeComposeDatasetBankReply) Reset() {
	*x = SubscribeComposeDatasetBankReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeComposeDatasetBankReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeComposeDatasetBankReply) ProtoMessage() {}

func (x *SubscribeComposeDatasetBankReply) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeComposeDatasetBankReply.ProtoReflect.Descriptor instead.
func (*SubscribeComposeDatasetBankReply) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{12}
}

func (x *SubscribeComposeDatasetBankReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SubscribeComposeDatasetBankReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpwardDataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V      []int32 `protobuf:"varint,1,rep,packed,name=v,proto3" json:"v,omitempty"`
	BankNo *int32  `protobuf:"varint,2,opt,name=bankNo,proto3,oneof" json:"bankNo,omitempty"` //堆序号
	RackNo *int32  `protobuf:"varint,3,opt,name=rackNo,proto3,oneof" json:"rackNo,omitempty"` //簇序号
	PackNo *int32  `protobuf:"varint,4,opt,name=packNo,proto3,oneof" json:"packNo,omitempty"` //包序号
}

func (x *UpwardDataValue) Reset() {
	*x = UpwardDataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpwardDataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpwardDataValue) ProtoMessage() {}

func (x *UpwardDataValue) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpwardDataValue.ProtoReflect.Descriptor instead.
func (*UpwardDataValue) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{13}
}

func (x *UpwardDataValue) GetV() []int32 {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *UpwardDataValue) GetBankNo() int32 {
	if x != nil && x.BankNo != nil {
		return *x.BankNo
	}
	return 0
}

func (x *UpwardDataValue) GetRackNo() int32 {
	if x != nil && x.RackNo != nil {
		return *x.RackNo
	}
	return 0
}

func (x *UpwardDataValue) GetPackNo() int32 {
	if x != nil && x.PackNo != nil {
		return *x.PackNo
	}
	return 0
}

type UpwardDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` //组件名称
	Keys   []string           `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Values []*UpwardDataValue `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *UpwardDataset) Reset() {
	*x = UpwardDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpwardDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpwardDataset) ProtoMessage() {}

func (x *UpwardDataset) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpwardDataset.ProtoReflect.Descriptor instead.
func (*UpwardDataset) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{14}
}

func (x *UpwardDataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpwardDataset) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *UpwardDataset) GetValues() []*UpwardDataValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type QueryComposeDatasetBankUpdateStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`             // 组件名称
	ColumnName string `protobuf:"bytes,2,opt,name=columnName,proto3" json:"columnName,omitempty"` // 字段名称
	BankNo     int32  `protobuf:"varint,4,opt,name=bankNo,proto3" json:"bankNo,omitempty"`        // 堆序号
	RackNo     int32  `protobuf:"varint,5,opt,name=rackNo,proto3" json:"rackNo,omitempty"`        // 簇序号
	PackNo     int32  `protobuf:"varint,6,opt,name=packNo,proto3" json:"packNo,omitempty"`        // 电池包序号
	Address    int32  `protobuf:"varint,7,opt,name=address,proto3" json:"address,omitempty"`      // 共享内存地址
}

func (x *QueryComposeDatasetBankUpdateStateRequest) Reset() {
	*x = QueryComposeDatasetBankUpdateStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryComposeDatasetBankUpdateStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryComposeDatasetBankUpdateStateRequest) ProtoMessage() {}

func (x *QueryComposeDatasetBankUpdateStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryComposeDatasetBankUpdateStateRequest.ProtoReflect.Descriptor instead.
func (*QueryComposeDatasetBankUpdateStateRequest) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{15}
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetBankNo() int32 {
	if x != nil {
		return x.BankNo
	}
	return 0
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetRackNo() int32 {
	if x != nil {
		return x.RackNo
	}
	return 0
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetPackNo() int32 {
	if x != nil {
		return x.PackNo
	}
	return 0
}

func (x *QueryComposeDatasetBankUpdateStateRequest) GetAddress() int32 {
	if x != nil {
		return x.Address
	}
	return 0
}

type QueryComposeDatasetBankUpdateStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32                           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data   *UpdateComposeDatasetBankResult `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryComposeDatasetBankUpdateStateReply) Reset() {
	*x = QueryComposeDatasetBankUpdateStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryComposeDatasetBankUpdateStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryComposeDatasetBankUpdateStateReply) ProtoMessage() {}

func (x *QueryComposeDatasetBankUpdateStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryComposeDatasetBankUpdateStateReply.ProtoReflect.Descriptor instead.
func (*QueryComposeDatasetBankUpdateStateReply) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{16}
}

func (x *QueryComposeDatasetBankUpdateStateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryComposeDatasetBankUpdateStateReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryComposeDatasetBankUpdateStateReply) GetData() *UpdateComposeDatasetBankResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateComposeDatasetBankResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int32                                        `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`         // 1:未开始 2: 进行中 3: 完成
	StartTime int64                                        `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"` // Unix时间戳
	Faileds   []*UpdateComposeDatasetBankResult_BankFailed `protobuf:"bytes,3,rep,name=faileds,proto3" json:"faileds,omitempty"`
}

func (x *UpdateComposeDatasetBankResult) Reset() {
	*x = UpdateComposeDatasetBankResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComposeDatasetBankResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComposeDatasetBankResult) ProtoMessage() {}

func (x *UpdateComposeDatasetBankResult) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComposeDatasetBankResult.ProtoReflect.Descriptor instead.
func (*UpdateComposeDatasetBankResult) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateComposeDatasetBankResult) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UpdateComposeDatasetBankResult) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UpdateComposeDatasetBankResult) GetFaileds() []*UpdateComposeDatasetBankResult_BankFailed {
	if x != nil {
		return x.Faileds
	}
	return nil
}

type UpdateComposeDatasetBankResult_BankFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankNo int32   `protobuf:"varint,1,opt,name=bankNo,proto3" json:"bankNo,omitempty"`
	RackNo []int32 `protobuf:"varint,2,rep,packed,name=rackNo,proto3" json:"rackNo,omitempty"`
}

func (x *UpdateComposeDatasetBankResult_BankFailed) Reset() {
	*x = UpdateComposeDatasetBankResult_BankFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_v1_compose_dataset_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComposeDatasetBankResult_BankFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComposeDatasetBankResult_BankFailed) ProtoMessage() {}

func (x *UpdateComposeDatasetBankResult_BankFailed) ProtoReflect() protoreflect.Message {
	mi := &file_ems_v1_compose_dataset_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComposeDatasetBankResult_BankFailed.ProtoReflect.Descriptor instead.
func (*UpdateComposeDatasetBankResult_BankFailed) Descriptor() ([]byte, []int) {
	return file_ems_v1_compose_dataset_proto_rawDescGZIP(), []int{17, 0}
}

func (x *UpdateComposeDatasetBankResult_BankFailed) GetBankNo() int32 {
	if x != nil {
		return x.BankNo
	}
	return 0
}

func (x *UpdateComposeDatasetBankResult_BankFailed) GetRackNo() []int32 {
	if x != nil {
		return x.RackNo
	}
	return nil
}

var File_ems_v1_compose_dataset_proto protoreflect.FileDescriptor

var file_ems_v1_compose_dataset_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x1e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x67,
	0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x65, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6b, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x22, 0x27, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xad, 0x02, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x0a, 0x01, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x0c, 0x0a,
	0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x11, 0x0a, 0x01, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x01, 0x63, 0x88, 0x01, 0x01, 0x12, 0x13,
	0x0a, 0x02, 0x62, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x62, 0x63,
	0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x02, 0x62, 0x6c, 0x12, 0x39, 0x0a, 0x02, 0x62, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x42, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x62, 0x74, 0x12, 0x11,
	0x0a, 0x01, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x01, 0x61, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x62, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04,
	0x52, 0x03, 0x62, 0x69, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x35, 0x0a, 0x07, 0x42, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x04, 0x0a, 0x02, 0x5f, 0x6b, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x63, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x62, 0x63, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x74,
	0x22, 0x4a, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x16, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4b, 0x65, 0x79,
	0x45, 0x6e, 0x75, 0x6d, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x0a, 0x01,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x42, 0x04, 0x0a,
	0x02, 0x5f, 0x6b, 0x22, 0xe1, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33,
	0x0a, 0x05, 0x74, 0x61, 0x67, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x61, 0x67, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x61, 0x67, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x67,
	0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x74, 0x61, 0x67, 0x73, 0x73, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x50, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7c, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x63,
	0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x53, 0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x63, 0x6b, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x50, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x39, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x01, 0x76, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x61,
	0x63, 0x6b, 0x4e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x22,
	0x6c, 0x0a, 0x0d, 0x55, 0x70, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc1, 0x01,
	0x0a, 0x29, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x27, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x73, 0x1a,
	0x3c, 0x0a, 0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x32, 0xb0, 0x05,
	0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x95, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x12, 0x9b, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x1a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x12, 0xa8, 0x01, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22,
	0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x73, 0x75,
	0x62, 0x12, 0xbc, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x1a, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6d, 0x73, 0x50, 0x01, 0x5a, 0x0d, 0x61,
	0x70, 0x69, 0x2f, 0x65, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ems_v1_compose_dataset_proto_rawDescOnce sync.Once
	file_ems_v1_compose_dataset_proto_rawDescData = file_ems_v1_compose_dataset_proto_rawDesc
)

func file_ems_v1_compose_dataset_proto_rawDescGZIP() []byte {
	file_ems_v1_compose_dataset_proto_rawDescOnce.Do(func() {
		file_ems_v1_compose_dataset_proto_rawDescData = protoimpl.X.CompressGZIP(file_ems_v1_compose_dataset_proto_rawDescData)
	})
	return file_ems_v1_compose_dataset_proto_rawDescData
}

var file_ems_v1_compose_dataset_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_ems_v1_compose_dataset_proto_goTypes = []interface{}{
	(*QueryComposeDatasetBankRequest)(nil),            // 0: api.ems.v1.QueryComposeDatasetBankRequest
	(*ComposeColumnName)(nil),                         // 1: api.ems.v1.ComposeColumnName
	(*ComposeColumnDataItem)(nil),                     // 2: api.ems.v1.ComposeColumnDataItem
	(*ComposeColumnData)(nil),                         // 3: api.ems.v1.ComposeColumnData
	(*ComposeColumnKeyEnum)(nil),                      // 4: api.ems.v1.ComposeColumnKeyEnum
	(*ComposeColumnKeyItem)(nil),                      // 5: api.ems.v1.ComposeColumnKeyItem
	(*ComposeDatasetList)(nil),                        // 6: api.ems.v1.ComposeDatasetList
	(*QueryComposeDatasetBankReply)(nil),              // 7: api.ems.v1.QueryComposeDatasetBankReply
	(*UpdateComposeDatasetBankRequest)(nil),           // 8: api.ems.v1.UpdateComposeDatasetBankRequest
	(*UpdateComposeDatasetBankReply)(nil),             // 9: api.ems.v1.UpdateComposeDatasetBankReply
	(*ComposeDatasetSub)(nil),                         // 10: api.ems.v1.ComposeDatasetSub
	(*SubscribeComposeDatasetBankRequest)(nil),        // 11: api.ems.v1.SubscribeComposeDatasetBankRequest
	(*SubscribeComposeDatasetBankReply)(nil),          // 12: api.ems.v1.SubscribeComposeDatasetBankReply
	(*UpwardDataValue)(nil),                           // 13: api.ems.v1.UpwardDataValue
	(*UpwardDataset)(nil),                             // 14: api.ems.v1.UpwardDataset
	(*QueryComposeDatasetBankUpdateStateRequest)(nil), // 15: api.ems.v1.QueryComposeDatasetBankUpdateStateRequest
	(*QueryComposeDatasetBankUpdateStateReply)(nil),   // 16: api.ems.v1.QueryComposeDatasetBankUpdateStateReply
	(*UpdateComposeDatasetBankResult)(nil),            // 17: api.ems.v1.UpdateComposeDatasetBankResult
	nil,                                               // 18: api.ems.v1.ComposeColumnDataItem.BtEntry
	(*UpdateComposeDatasetBankResult_BankFailed)(nil), // 19: api.ems.v1.UpdateComposeDatasetBankResult.BankFailed
}
var file_ems_v1_compose_dataset_proto_depIdxs = []int32{
	18, // 0: api.ems.v1.ComposeColumnDataItem.bt:type_name -> api.ems.v1.ComposeColumnDataItem.BtEntry
	2,  // 1: api.ems.v1.ComposeColumnData.tags:type_name -> api.ems.v1.ComposeColumnDataItem
	5,  // 2: api.ems.v1.ComposeDatasetList.key:type_name -> api.ems.v1.ComposeColumnKeyItem
	3,  // 3: api.ems.v1.ComposeDatasetList.tagss:type_name -> api.ems.v1.ComposeColumnData
	6,  // 4: api.ems.v1.QueryComposeDatasetBankReply.data:type_name -> api.ems.v1.ComposeDatasetList
	17, // 5: api.ems.v1.UpdateComposeDatasetBankReply.data:type_name -> api.ems.v1.UpdateComposeDatasetBankResult
	10, // 6: api.ems.v1.SubscribeComposeDatasetBankRequest.composes:type_name -> api.ems.v1.ComposeDatasetSub
	13, // 7: api.ems.v1.UpwardDataset.values:type_name -> api.ems.v1.UpwardDataValue
	17, // 8: api.ems.v1.QueryComposeDatasetBankUpdateStateReply.data:type_name -> api.ems.v1.UpdateComposeDatasetBankResult
	19, // 9: api.ems.v1.UpdateComposeDatasetBankResult.faileds:type_name -> api.ems.v1.UpdateComposeDatasetBankResult.BankFailed
	0,  // 10: api.ems.v1.ComposeDataset.QueryComposeDatasetBank:input_type -> api.ems.v1.QueryComposeDatasetBankRequest
	8,  // 11: api.ems.v1.ComposeDataset.UpdateComposeDatasetBank:input_type -> api.ems.v1.UpdateComposeDatasetBankRequest
	11, // 12: api.ems.v1.ComposeDataset.SubscribeComposeDatasetBank:input_type -> api.ems.v1.SubscribeComposeDatasetBankRequest
	15, // 13: api.ems.v1.ComposeDataset.QueryComposeDatasetBankUpdateState:input_type -> api.ems.v1.QueryComposeDatasetBankUpdateStateRequest
	7,  // 14: api.ems.v1.ComposeDataset.QueryComposeDatasetBank:output_type -> api.ems.v1.QueryComposeDatasetBankReply
	9,  // 15: api.ems.v1.ComposeDataset.UpdateComposeDatasetBank:output_type -> api.ems.v1.UpdateComposeDatasetBankReply
	12, // 16: api.ems.v1.ComposeDataset.SubscribeComposeDatasetBank:output_type -> api.ems.v1.SubscribeComposeDatasetBankReply
	16, // 17: api.ems.v1.ComposeDataset.QueryComposeDatasetBankUpdateState:output_type -> api.ems.v1.QueryComposeDatasetBankUpdateStateReply
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ems_v1_compose_dataset_proto_init() }
func file_ems_v1_compose_dataset_proto_init() {
	if File_ems_v1_compose_dataset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ems_v1_compose_dataset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryComposeDatasetBankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeColumnName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeColumnDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeColumnData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeColumnKeyEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeColumnKeyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeDatasetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryComposeDatasetBankReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComposeDatasetBankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComposeDatasetBankReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeDatasetSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeComposeDatasetBankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeComposeDatasetBankReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpwardDataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpwardDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryComposeDatasetBankUpdateStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryComposeDatasetBankUpdateStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComposeDatasetBankResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_v1_compose_dataset_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComposeDatasetBankResult_BankFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ems_v1_compose_dataset_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_ems_v1_compose_dataset_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_ems_v1_compose_dataset_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ems_v1_compose_dataset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ems_v1_compose_dataset_proto_goTypes,
		DependencyIndexes: file_ems_v1_compose_dataset_proto_depIdxs,
		MessageInfos:      file_ems_v1_compose_dataset_proto_msgTypes,
	}.Build()
	File_ems_v1_compose_dataset_proto = out.File
	file_ems_v1_compose_dataset_proto_rawDesc = nil
	file_ems_v1_compose_dataset_proto_goTypes = nil
	file_ems_v1_compose_dataset_proto_depIdxs = nil
}
